{"version":3,"sources":["../index.js","App.js","serviceWorker.js","index.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","events","EventBus","this","calls","key","value","string","callback","_this$calls","_len","arguments","length","props","Array","_key","document","addEventListener","emit","window","TimePolyfill","_React$Component","TimeInput","_this","call","$input","createRef","on","polyfill","current","state","dataset","event","onChange","getInputValue","element","setState","prevProps","_this2","propsHaveUpdated","setTimeout","onTimeChange","update","_this3","_this$props","createElement","target","i","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread","onBlur","e","ref","type","Component","App","useState","setValue","test","setTest","className","style","marginTop","display","marginRight","onClick","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.49eaa6fc.chunk.js","sourcesContent":["import _defineProperty from \"C:\\\\Projects\\\\Open Source\\\\npm-mine\\\\react-time-input-polyfill\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"C:\\\\Projects\\\\Open Source\\\\npm-mine\\\\react-time-input-polyfill\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _possibleConstructorReturn from \"C:\\\\Projects\\\\Open Source\\\\npm-mine\\\\react-time-input-polyfill\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Projects\\\\Open Source\\\\npm-mine\\\\react-time-input-polyfill\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Projects\\\\Open Source\\\\npm-mine\\\\react-time-input-polyfill\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"C:\\\\Projects\\\\Open Source\\\\npm-mine\\\\react-time-input-polyfill\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Open Source\\\\npm-mine\\\\react-time-input-polyfill\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport supportsTime from 'time-input-polyfill/core/helpers/supportsTime';\nimport loadJS from 'time-input-polyfill/core/helpers/loadJS';\n\nvar EventBus =\n/*#__PURE__*/\nfunction () {\n  function EventBus() {\n    _classCallCheck(this, EventBus);\n\n    this.calls = {};\n  }\n\n  _createClass(EventBus, [{\n    key: \"on\",\n    value: function on(string, callback) {\n      this.calls[string] = callback;\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(string) {\n      var _this$calls;\n\n      for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        props[_key - 1] = arguments[_key];\n      }\n\n      return (_this$calls = this.calls)[string].apply(_this$calls, props);\n    }\n  }]);\n\n  return EventBus;\n}();\n\nvar events = new EventBus();\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  if (!supportsTime) {\n    loadJS('https://cdn.jsdelivr.net/npm/time-input-polyfill/dist/time-input-polyfill.min.js', function () {\n      events.emit('polyfill_loaded', window.TimePolyfill);\n    });\n  }\n});\n\nvar TimeInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TimeInput, _React$Component);\n\n  function TimeInput(props) {\n    var _this;\n\n    _classCallCheck(this, TimeInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TimeInput).call(this, props));\n    _this.$input = React.createRef();\n    events.on('polyfill_loaded', function (polyfill) {\n      new polyfill(_this.$input.current);\n    });\n    _this.state = {\n      value: props.value || ''\n    };\n    return _this;\n  }\n\n  _createClass(TimeInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.value) this.$input.current.value = this.props.value;\n    }\n  }, {\n    key: \"getInputValue\",\n    value: function getInputValue() {\n      var $input = this.$input.current;\n      return supportsTime ? $input.value : $input.dataset.value;\n    }\n  }, {\n    key: \"onTimeChange\",\n    value: function onTimeChange(event) {\n      if (this.props.onChange) {\n        var value = this.getInputValue();\n        this.props.onChange({\n          value: value,\n          element: this.$input.current,\n          event: event\n        });\n        this.setState({\n          value: value\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      var propsHaveUpdated = prevProps.value !== this.props.value && this.props.value !== this.state.value;\n      var $input = this.$input.current;\n\n      if (propsHaveUpdated) {\n        $input.value = this.props.value;\n        setTimeout(function () {\n          return _this2.onTimeChange('props update');\n        }, 0);\n      }\n\n      if (!supportsTime) {\n        if ($input.dataset.value !== this.state.value) {\n          this.setState({\n            value: $input.dataset.value\n          });\n        }\n\n        this.$input.current.polyfill.update();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          value = _this$props.value,\n          props = _objectWithoutProperties(_this$props, [\"value\"]);\n\n      return React.createElement('input', _objectSpread({}, props, {\n        onBlur: function onBlur(e) {\n          // The only way to get IE to fire the props onChange event without breaking the base polyfill functionality\n          _this3.onTimeChange(e);\n\n          if (_this3.props.onBlur) _this3.props.onBlur(e);\n        },\n        onChange: function onChange(e) {\n          return _this3.onTimeChange(e);\n        },\n        // only works in non-ie browsers\n        // onInput: e => this.onTimeChange(e), // Can't use this because it breaks the selection functionality\n        ref: this.$input,\n        type: 'time',\n        'data-state-value': this.state.value,\n        'data-props-value': value\n      }), null);\n    }\n  }]);\n\n  return TimeInput;\n}(React.Component);\n\nexport { TimeInput as default };","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport TimeInput from '../index'\r\n\r\nfunction App() {\r\n  const [value, setValue] = useState('20:30')\r\n  const [test, setTest] = useState(value)\r\n  return (\r\n    <div className=\"App\">\r\n      <label style={{marginTop: '2em', display: 'block'}}>\r\n        <span style={{marginRight: '0.5em'}}>Time input</span>\r\n        <TimeInput value={value} onChange={({value}) => setTest(value)} />\r\n      </label>\r\n\r\n      <p>\r\n        <button onClick={()=>setValue('07:15')}>Set time to 7:15 AM</button>\r\n        <button onClick={()=>setValue('15:45')}>Set time to 3:45 PM</button>\r\n      </p>\r\n      <p>Test: {test}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}